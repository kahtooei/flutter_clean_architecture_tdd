// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_clean_architecture_tdd/test/features/crud_feature/data/repository/customer_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_clean_architecture_tdd/features/crud_feature/data/data_source/local/customer_local_datasource.dart'
    as _i2;
import 'package:flutter_clean_architecture_tdd/features/crud_feature/data/models/customer_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CustomerLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerLocalDataSource extends _i1.Mock
    implements _i2.CustomerLocalDataSource {
  MockCustomerLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> insertCustomer(_i4.CustomerModel? customer) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCustomer,
          [customer],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.CustomerModel>> selectAllCustomers() =>
      (super.noSuchMethod(
        Invocation.method(
          #selectAllCustomers,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.CustomerModel>>.value(<_i4.CustomerModel>[]),
      ) as _i3.Future<List<_i4.CustomerModel>>);
  @override
  _i3.Future<void> updateCustomer(_i4.CustomerModel? customer) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCustomer,
          [customer],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> deleteCustomer(_i4.CustomerModel? customer) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCustomer,
          [customer],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
