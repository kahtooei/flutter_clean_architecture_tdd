// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_clean_architecture_tdd/test/features/crud_feature/domain/usecase/create_customer_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_clean_architecture_tdd/core/params/customer_params.dart'
    as _i6;
import 'package:flutter_clean_architecture_tdd/core/resources/request_status.dart'
    as _i2;
import 'package:flutter_clean_architecture_tdd/features/crud_feature/domain/entities/customer_entity.dart'
    as _i5;
import 'package:flutter_clean_architecture_tdd/features/crud_feature/domain/repository/customer_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRequestStatus_0<T> extends _i1.SmartFake
    implements _i2.RequestStatus<T> {
  _FakeRequestStatus_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CustomerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerRepository extends _i1.Mock
    implements _i3.CustomerRepository {
  MockCustomerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.RequestStatus<_i5.CustomerEntity>> createNewCustomer(
          _i6.CustomerParams? customerParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewCustomer,
          [customerParams],
        ),
        returnValue: _i4.Future<_i2.RequestStatus<_i5.CustomerEntity>>.value(
            _FakeRequestStatus_0<_i5.CustomerEntity>(
          this,
          Invocation.method(
            #createNewCustomer,
            [customerParams],
          ),
        )),
      ) as _i4.Future<_i2.RequestStatus<_i5.CustomerEntity>>);
  @override
  _i4.Future<_i2.RequestStatus<bool>> deleteCustomer(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCustomer,
          [id],
        ),
        returnValue: _i4.Future<_i2.RequestStatus<bool>>.value(
            _FakeRequestStatus_0<bool>(
          this,
          Invocation.method(
            #deleteCustomer,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.RequestStatus<bool>>);
  @override
  _i4.Future<_i2.RequestStatus<_i5.CustomerEntity>> editCustomer(
    int? id,
    _i6.CustomerParams? customerParams,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editCustomer,
          [
            id,
            customerParams,
          ],
        ),
        returnValue: _i4.Future<_i2.RequestStatus<_i5.CustomerEntity>>.value(
            _FakeRequestStatus_0<_i5.CustomerEntity>(
          this,
          Invocation.method(
            #editCustomer,
            [
              id,
              customerParams,
            ],
          ),
        )),
      ) as _i4.Future<_i2.RequestStatus<_i5.CustomerEntity>>);
  @override
  _i4.Future<_i2.RequestStatus<List<_i5.CustomerEntity>>> getAllCustomers() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCustomers,
          [],
        ),
        returnValue:
            _i4.Future<_i2.RequestStatus<List<_i5.CustomerEntity>>>.value(
                _FakeRequestStatus_0<List<_i5.CustomerEntity>>(
          this,
          Invocation.method(
            #getAllCustomers,
            [],
          ),
        )),
      ) as _i4.Future<_i2.RequestStatus<List<_i5.CustomerEntity>>>);
}
